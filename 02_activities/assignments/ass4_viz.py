# -*- coding: utf-8 -*-
"""ass4 viz.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rZTzrgXbpd_DFz5CXP35SXJVvWrUOIs3
"""

from google.colab import drive
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
import matplotlib.ticker as ticker

# Mount Google Drive
drive.mount('/content/drive')

# Define the path to the CSV file in Google Drive
file_path = '/content/drive/My Drive/wage rates1.csv'

# Load the data from the CSV file
data = pd.read_csv(file_path)

# Convert the 'Value' column to numeric, coercing any errors
data['Value'] = pd.to_numeric(data['Value'], errors='coerce')

# Drop any rows with missing values in the 'Value' column
data = data.dropna(subset=['Value'])

# Cleaning data: Remove occupations that start with a space and filter out "Total employees"
filtered_data = data[~data['Occupation'].str.startswith(' ')]
filtered_data = filtered_data[filtered_data['Occupation'] != 'Total employees']

# Ensure the number of colors matches the number of unique occupations
unique_occupations = filtered_data['Occupation'].nunique()
custom_colors = [
    '#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3',
    '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd'
]
custom_colors = (custom_colors * (unique_occupations // len(custom_colors) + 1))[:unique_occupations]

# Set the style
sns.set(style="whitegrid")

# Create a figure and axis
plt.figure(figsize=(14, 10))

# Create a box plot with custom colors
sns.boxplot(x='Value', y='Occupation', data=filtered_data, palette=custom_colors)

# Customizing titles and labels
plt.title('Wage Distribution Across Occupations in Ontario Regions', fontsize=20)
plt.xlabel('Average Hourly Rate ($)', fontsize=15,ha="right")

# Set fontsizes
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)

# Adjusting formats
plt.grid(True, linestyle='--', linewidth=0.7, alpha=0.7)
for spine in plt.gca().spines.values():
    spine.set_visible(False)

# Format the x-axis labels as currency as it is hourly rate in CAD
plt.gca().xaxis.set_major_formatter(ticker.FuncFormatter(lambda x, pos: f'${x:,.2f}'))
plt.gca().set_ylabel('')

# Change "Occupation" label as the default is ugly
plt.text(-0.15, -0.1, 'Occupation', fontsize=15, ha='left', va='bottom', transform=plt.gca().transAxes)
plt.gcf().text(
    0.5, 0.95,
    'A box plot depicting the wage distribution across various occupations in Ontario regions\n'
    'in Canadian dollars from 2013 to 2015, ranging approximately from $10 to $50.\n'
    'Each occupation is represented by a separate horizontal box.',
    fontsize=12, ha='left'
)